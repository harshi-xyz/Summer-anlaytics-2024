import pandas as pd

# Load the data
train_features = pd.read_csv('/mnt/data/training_set_features.csv')
train_labels = pd.read_csv('/mnt/data/training_set_labels.csv')
test_features = pd.read_csv('/mnt/data/test_set_features.csv')
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

# Identify categorical and numerical columns
categorical_cols = train_features.select_dtypes(include=['object']).columns
numerical_cols = train_features.select_dtypes(include=['int64', 'float64']).columns

# Define preprocessing steps
numerical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='median')),
    ('scaler', StandardScaler())
])

categorical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='most_frequent')),
    ('onehot', OneHotEncoder(handle_unknown='ignore'))
])

# Combine preprocessing steps
preprocessor = ColumnTransformer(
    transformers=[
        ('num', numerical_transformer, numerical_cols),
        ('cat', categorical_transformer, categorical_cols)
    ])

# Apply preprocessing to the data
X_train = preprocessor.fit_transform(train_features)
X_test = preprocessor.transform(test_features)
y_train = train_labels[['h1n1_vaccine', 'seasonal_vaccine']]
from sklearn.ensemble import RandomForestClassifier
from sklearn.multioutput import MultiOutputClassifier

# Train a MultiOutputClassifier with RandomForest
model = MultiOutputClassifier(RandomForestClassifier(n_estimators=100, random_state=42))
model.fit(X_train, y_train)
# Predict probabilities for test set
y_pred_proba = model.predict_proba(X_test)

# Extract probabilities for each target
h1n1_vaccine_proba = y_pred_proba[0][:, 1]
seasonal_vaccine_proba = y_pred_proba[1][:, 1]

# Create submission DataFrame
submission = pd.DataFrame({
    'respondent_id': test_features['respondent_id'],
    'h1n1_vaccine': h1n1_vaccine_proba,
    'seasonal_vaccine': seasonal_vaccine_proba
})

# Save to CSV
submission.to_csv('submission.csv', index=False)
from sklearn.model_selection import train_test_split
from sklearn.metrics import roc_auc_score

# Split the data for validation
X_train_split, X_valid_split, y_train_split, y_valid_split = train_test_split(
    X_train, y_train, test_size=0.2, random_state=42)

# Train the model on the split data
model.fit(X_train_split, y_train_split)

# Predict probabilities for the validation set
y_valid_pred_proba = model.predict_proba(X_valid_split)

# Calculate ROC AUC scores
h1n1_vaccine_auc = roc_auc_score(y_valid_split['h1n1_vaccine'], y_valid_pred_proba[0][:, 1])
seasonal_vaccine_auc = roc_auc_score(y_valid_split['seasonal_vaccine'], y_valid_pred_proba[1][:, 1])

# Print the mean ROC AUC score
mean_roc_auc = (h1n1_vaccine_auc + seasonal_vaccine_auc) / 2
print('Mean ROC AUC Score:', mean_roc_auc)
